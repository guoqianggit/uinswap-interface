{"ast":null,"code":"import _regeneratorRuntime from\"/root/code/solidity/uniswap/testInterface/uinswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/root/code/solidity/uniswap/testInterface/uinswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/root/code/solidity/uniswap/testInterface/uinswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useLayoutEffect}from'react';import{shade}from'polished';import Vibrant from'node-vibrant';import{hex}from'wcag-contrast';import{ChainId}from'@uniswap/sdk';function getColorFromToken(_x){return _getColorFromToken.apply(this,arguments);}function _getColorFromToken(){_getColorFromToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var path;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(token.chainId===ChainId.RINKEBY&&token.address==='0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735')){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve('#FAAB14'));case 2:path=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\".concat(token.address,\"/logo.png\");return _context.abrupt(\"return\",Vibrant.from(path).getPalette().then(function(palette){if(palette===null||palette===void 0?void 0:palette.Vibrant){var detectedHex=palette.Vibrant.hex;var AAscore=hex(detectedHex,'#FFF');while(AAscore<3){detectedHex=shade(0.005,detectedHex);AAscore=hex(detectedHex,'#FFF');}return detectedHex;}return null;}).catch(function(){return null;}));case 4:case\"end\":return _context.stop();}}},_callee);}));return _getColorFromToken.apply(this,arguments);}export function useColor(token){var _useState=useState('#2172E5'),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];useLayoutEffect(function(){var stale=false;if(token){getColorFromToken(token).then(function(tokenColor){if(!stale&&tokenColor!==null){setColor(tokenColor);}});}return function(){stale=true;setColor('#2172E5');};},[token]);return color;}","map":{"version":3,"sources":["/root/code/solidity/uniswap/testInterface/uinswap-interface/src/hooks/useColor.ts"],"names":["useState","useLayoutEffect","shade","Vibrant","hex","ChainId","getColorFromToken","token","chainId","RINKEBY","address","Promise","resolve","path","from","getPalette","then","palette","detectedHex","AAscore","catch","useColor","color","setColor","stale","tokenColor"],"mappings":"mhBAAA,OAASA,QAAT,CAAmBC,eAAnB,KAA0C,OAA1C,CACA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,cAApB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,OAAgBC,OAAhB,KAA+B,cAA/B,C,QAEeC,CAAAA,iB,+JAAf,iBAAiCC,KAAjC,gIACMA,KAAK,CAACC,OAAN,GAAkBH,OAAO,CAACI,OAA1B,EAAqCF,KAAK,CAACG,OAAN,GAAkB,4CAD7D,0DAEWC,OAAO,CAACC,OAAR,CAAgB,SAAhB,CAFX,SAKQC,IALR,mGAK0GN,KAAK,CAACG,OALhH,8CAOSP,OAAO,CAACW,IAAR,CAAaD,IAAb,EACJE,UADI,GAEJC,IAFI,CAEC,SAAAC,OAAO,CAAI,CACf,GAAIA,OAAJ,SAAIA,OAAJ,iBAAIA,OAAO,CAAEd,OAAb,CAAsB,CACpB,GAAIe,CAAAA,WAAW,CAAGD,OAAO,CAACd,OAAR,CAAgBC,GAAlC,CACA,GAAIe,CAAAA,OAAO,CAAGf,GAAG,CAACc,WAAD,CAAc,MAAd,CAAjB,CACA,MAAOC,OAAO,CAAG,CAAjB,CAAoB,CAClBD,WAAW,CAAGhB,KAAK,CAAC,KAAD,CAAQgB,WAAR,CAAnB,CACAC,OAAO,CAAGf,GAAG,CAACc,WAAD,CAAc,MAAd,CAAb,CACD,CACD,MAAOA,CAAAA,WAAP,CACD,CACD,MAAO,KAAP,CACD,CAbI,EAcJE,KAdI,CAcE,iBAAM,KAAN,EAdF,CAPT,wD,oDAwBA,MAAO,SAASC,CAAAA,QAAT,CAAkBd,KAAlB,CAAiC,eACZP,QAAQ,CAAC,SAAD,CADI,wCAC/BsB,KAD+B,eACxBC,QADwB,eAGtCtB,eAAe,CAAC,UAAM,CACpB,GAAIuB,CAAAA,KAAK,CAAG,KAAZ,CAEA,GAAIjB,KAAJ,CAAW,CACTD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBS,IAAzB,CAA8B,SAAAS,UAAU,CAAI,CAC1C,GAAI,CAACD,KAAD,EAAUC,UAAU,GAAK,IAA7B,CAAmC,CACjCF,QAAQ,CAACE,UAAD,CAAR,CACD,CACF,CAJD,EAKD,CAED,MAAO,WAAM,CACXD,KAAK,CAAG,IAAR,CACAD,QAAQ,CAAC,SAAD,CAAR,CACD,CAHD,CAID,CAfc,CAeZ,CAAChB,KAAD,CAfY,CAAf,CAiBA,MAAOe,CAAAA,KAAP,CACD","sourcesContent":["import { useState, useLayoutEffect } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token, ChainId } from '@uniswap/sdk'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (token.chainId === ChainId.RINKEBY && token.address === '0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735') {\n    return Promise.resolve('#FAAB14')\n  }\n\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then(palette => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then(tokenColor => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n"]},"metadata":{},"sourceType":"module"}